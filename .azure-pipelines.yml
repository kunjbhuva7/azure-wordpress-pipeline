trigger:
  branches:
    include:
      - main

pr: none

pool:
  vmImage: ubuntu-latest

variables:
  - group: TerraformSecrets

steps:
  - task: TerraformInstaller@1
    inputs:
      terraformVersion: '1.6.6'
    displayName: 'Install Terraform'

  - task: DownloadSecureFile@1
    name: sshPrivateKey
    inputs:
      secureFile: 'id_rsa'
    displayName: 'Download SSH private key'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        mkdir -p terraform/keys
        cp $(sshPrivateKey.secureFilePath) terraform/keys/id_rsa
        chmod 600 terraform/keys/id_rsa
    displayName: 'Copy private key to keys folder'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo "Initializing Terraform..."
        terraform init
      workingDirectory: terraform
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
    displayName: 'Terraform Init'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo "Running Terraform Plan..."
        terraform plan -out=tfplan \
          -var "subscription_id=$(ARM_SUBSCRIPTION_ID)" \
          -var "client_id=$(ARM_CLIENT_ID)" \
          -var "client_secret=$(ARM_CLIENT_SECRET)" \
          -var "tenant_id=$(ARM_TENANT_ID)"
      workingDirectory: terraform
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
    displayName: 'Terraform Plan'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo "Applying Terraform Plan..."
        terraform apply -auto-approve tfplan
      workingDirectory: terraform
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
    displayName: 'Terraform Apply'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo "✅ Terraform Deployment Successful!"
    displayName: 'Success Message'

  # ✅ Cross-platform Email using Python
  - task: Bash@3
    displayName: 'Send Success Email'
    inputs:
      targetType: 'inline'
      script: |
        echo "Sending email using Python..."
        python3 - <<EOF
import smtplib
from email.mime.text import MIMEText

sender = "kunjbhuva301@gmail.com"
receiver = "kunjbhuva301@gmail.com"
app_password = "$(SMTP_PASSWORD)"  # Secret variable

message = MIMEText("✅ Your Terraform pipeline ran successfully and infrastructure is deployed.\n\nRegards,\nAzure DevOps Pipeline")
message['Subject'] = "Terraform Pipeline ✅ Success"
message['From'] = sender
message['To'] = receiver

try:
    server = smtplib.SMTP_SSL("smtp.gmail.com", 465)
    server.login(sender, app_password)
    server.sendmail(sender, receiver, message.as_string())
    server.quit()
    print("✅ Email sent successfully!")
except Exception as e:
    print("❌ Failed to send email:", e)
EOF

