trigger:
  branches:
    include:
      - main

pr: none  # Disable PR-based pipeline runs

pool:
  vmImage: ubuntu-latest

variables:
  - group: TerraformSecrets

steps:
  # Install Terraform
  - task: TerraformInstaller@1
    inputs:
      terraformVersion: '1.6.6'

  # Create SSH private key file from secret variable (if required by Terraform or remote modules)
  - script: |
      echo "Creating SSH Private Key..."
      echo "$ID_RSA" > ~/.ssh/id_rsa
      chmod 600 ~/.ssh/id_rsa
    displayName: 'Create SSH Private Key'
    condition: and(succeeded(), ne(variables['ID_RSA'], ''))  # Run only if ID_RSA is set

  # Terraform Init
  - script: |
      echo "Initializing Terraform..."
      terraform init
    displayName: 'Terraform Init'
    workingDirectory: terraform
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)

  # Terraform Plan
  - script: |
      echo "Running Terraform Plan..."
      terraform plan -out=tfplan \
        -var "subscription_id=$(ARM_SUBSCRIPTION_ID)" \
        -var "client_id=$(ARM_CLIENT_ID)" \
        -var "client_secret=$(ARM_CLIENT_SECRET)" \
        -var "tenant_id=$(ARM_TENANT_ID)"
    displayName: 'Terraform Plan'
    workingDirectory: terraform
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)

  # Terraform Apply
  - script: |
      echo "Applying Terraform Plan..."
      terraform apply -auto-approve tfplan
    displayName: 'Terraform Apply'
    workingDirectory: terraform
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)

  # Success Message
  - script: |
      echo "✅ Terraform Deployment Successful!"
    displayName: 'Success Message'

  # Send Email Notification
  - task: SendEmail@1
    inputs:
      To: 'kunjbhuva301@gmail.com'
      Subject: '✅ Terraform Pipeline Success'
      Body: |
        Hello,

        Your Terraform pipeline ran successfully and infrastructure is deployed.

        Regards,  
        Azure DevOps Pipeline

